---------------------------------------------------------------------------
|                       FEATURE ROADMAP / TODO LIST                       |
---------------------------------------------------------------------------

ENGINE (Dogwood)
    * Game object/component system
        * Proper awake/start/enable/disable/destroy/etc.
        * Fix custom component bindings
    * Resources
        * Unloading
        * Material type?
    
    * Text (2D)
    * Particles
    * Shadows
    * Physics
    * Animation
    * Audio
    * Networking
    * Memory allocators
    * Prefabs

    * Shading
        * Multiple light sources?
    * Transform math helpers

    * Debugging
        * Debug logging (with streams)
        * Tweakables?

    * Fix-up stuff
        * Memory leaks everywhere! Lots of missing "deletes"
        * Colour -> Color everywhere for consistency
        * Rewrite matrix inversion. Currently just copied from CS488 provided code
        * Add missing matrix maths (e.g. addition)
        * Engine provided assets (e.g. default shaders, primitive meshes)
        * Input wrappers
            * Configurable gamepad setup
            * #define to compile without XInput?
        

---------------------------------------------------------------------------

EDITOR (Thicket)

    * Project
        * Project settings window
        * typedef guid type?
        * Prompt for save on exit/unload
        * Remove assets (un-import)
        * Save/load scene list

    * Scene
        * Prompt for save on exit/unload
        * Camera settings
        * Light settings

    * Assets widget
        * Enable drag & drop onto object

    * Game components
        * Built-in component widgets
            * Mesh: hook up browse
            * Texture: hook up browse
            * Shader: show on material widget, hook up browse
        * Remove components
            * Undo/redo on add/remove
            * Refresh widget on add/remove
        * Enable/disable components
        * PIPELINE
            - Show bool values as check boxes, change cell colour for colours
            - Set data using EditorCommands for undo/redo

    * Visuals
        * Change transform tool shape based on mode
        * Use cones instead of pyramids for gnomon arrows

    * Object manipulation
        * Local vs. Global option
    
    * Window resizing

    * "Prefabs"?

    BUGS:
        Lo pri
        - Items don't auto expand when reparented
        - Camera "up" is wrong / LookAt bug
        - Scene view resolution isn't set nicely
        - Transform widget values don't update when object is moved with transform tool
        - Keep constant gnomon size
        - Non-uniform scaling breaks object picking
        - Rotation tool behaviour is non-intuitive
        - Saving project should write asset list in consistent order
        - Fix GameObject child removal
        - Component guid in list of scene resources?
        - Refresh widgets on schema rebuild

        Hi pri
        - Undo/redo broken with delete/undo create. Need to avoid use of QModelIndex

---------------------------------------------------------------------------

GAME (Katamari?)


---------------------------------------------------------------------------

SCENE/EDITOR REQUIREMENTS

    - Create game objects
    - Name game objects
    - Reparent game objects
    - Position, rotate, and scale game objects
    - Enable/disable game objects
    - Delete game objects
    - Add built-in components to game objects
	    - Mesh, Material, Texture
    - Set the values of built in components to game objects
	    - Mesh, Material, Texture
    - Add user defined (C++) components to game objects
    - Set the values of user defined (C++) components of game objects
    - Instance/duplicate game objects

    - Position the camera
    - Position the light source(s), set parameters


RUN-TIME GAME OBJECT REQUIREMENTS

    - Create/spawn game objects
    - Trigger Awake/Start/etc. functions
    - Name game objects
    - Reparent game objects
    - Position, rotate, and scale game objects
    - Enable/disable game objects
    - Destroy game objects
    - Add/remove components

---------------------------------------------------------------------------

DESIGN DECISIONS

    Scene files
     - Format: XML
        - Mergeable/diffable
        - Human readable
        - Human writeable (before tool is ready)

    Editor
    - Start early! Build in lockstep with Engine features
    - Put Engine code in separate project that builds static lib
        - Linked to Game exe and Editor exe

    Windowing/UI Library
    - QT for Editor but GLFW for game
        - QT needed for UI for Editor, but can't control game loop as easily, slower
        - Can build game without Qt dependency

    Undo/redo 
    - Added undo stack right after first editor commands were implemented (create and delete)
    - Would be extremely painful to add in later after lots of commands were implemented

    Error checking in Editor
    - Make some assumptions about user choices for simplicity

    Reworking shader asset
    - Initially shaders were a weird special case of asset with two source files (vert shader and frag shader)
    - This cause a lot of ugly special case code all over the place
    - Eventually changed it so that a shader is just one file, with annotation separating vert part from frag part
    - Wish I had done the change sooner, had to change project and scene files by hand to fix it