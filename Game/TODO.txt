TODO / FEATURE ROADMAP

Engine
    * Game object/component system
        * Proper awake/start/enable/disable/destroy/etc.
    * GUIDs
    
    * Particles
    * Shadows
    * Text (2D)
    * Physics
    * Animation
    * Audio
    * Networking
    * Memory allocators
    * Prefabs

    * Shading
        * Multiple light sources?
    * Transform math helpers

Editor
    * Choose/install UI framework
    * Load scene file
    * Render scene

Debugging
    * Debug logging (with streams)
    * Tweakables?

Fix-up stuff
    * Colour -> Color everywhere for consistency
    * Rewrite matrix inversion. Currently just copied from CS488 provided code
    * Add missing matrix maths (e.g. addition)
    * Qt dll paths?

Potential tool names
    * thicket, grove, briar, shrubbery, timber, sprout, lumber, rafter, joist, axe, hatchet

-----------------------------------

SCENE/EDITOR REQUIREMENTS

- Create game objects
- Name game objects
- Reparent game objects
- Position, rotate, and scale game objects
- Enable/disable game objects
- Delete game objects
- Add built-in components to game objects
	- Mesh, Material, Texture
- Set the values of built in components to game objects
	- Mesh, Material, Texture
- Add user defined (C++) components to game objects
- Set the values of user defined (C++) components of game objects
- Instance/duplicate game objects

- Position the camera
- Position the light source(s), set parameters


RUN-TIME GAME OBJECT REQUIREMENTS

- Create/spawn game objects
- Trigger Awake/Start/etc. functions
- Name game objects
- Reparent game objects
- Position, rotate, and scale game objects
- Enable/disable game objects
- Destroy game objects
- Add/remove components

-----------------------------------

DESIGN DECISIONS

Scene files
 - Format: XML
    - Mergeable/diffable
    - Human readable
    - Human writeable (before tool is ready)

Build Editor early
- Build in lockstep with Engine features
- Easier to separate components needed from engine (e.g. rendering) earlier on